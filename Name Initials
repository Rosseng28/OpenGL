#include <GL/glut.h> // OpenGL Utility ToolKit Library
void display(); //declare a function
void reshape(int, int);
int main(int argc,char**argv)
{
 glutInit(&argc,argv);
 glutInitDisplayMode(GLUT_RGB); //sets diplay to rgb
 glutInitWindowPosition(200,100); //position of the program in your screen
 glutInitWindowSize(500,500); //size of the program window
 glutCreateWindow("My Name Initials"); //window title
 glutDisplayFunc(display);//call display function
 glutReshapeFunc(reshape);
 glutMainLoop(); //loop all functions
}
void display()
{
 glClear(GL_COLOR_BUFFER_BIT);

//creating a line primitive
glColor3f(1,0,1);
 glBegin(GL_LINE_LOOP);
 glVertex2f(-6,4);
 glVertex2f(-2,4);
 glVertex2f(-1,3);
 glVertex2f(-1,1);
 glVertex2f(-2,0);
 glVertex2f(-1,-4);
 glVertex2f(-3,-4);
 glVertex2f(-4,0);
 glVertex2f(-4,-4);
 glVertex2f(-6,-4);   
 glEnd();//ending the creation

 glColor3f(1,0,1);
  glBegin(GL_LINE_LOOP);
 glVertex2f(-4,1.5);
 glVertex2f(-4,2.5);
 glVertex2f(-3,2.5);
 glVertex2f(-2.5,2);
 glVertex2f(-3,1.5);
 glEnd();//ending the creation

 glColor3f(0,1,1);
 glBegin(GL_LINE_LOOP);
 glVertex2f(1,4);
 glVertex2f(3,4);
 glVertex2f(3,-2);
 glVertex2f(6,-2);
 glVertex2f(6,-4);
 glVertex2f(1,-4);

 glEnd();//ending the creation
 glFlush();// force execution of GL commands in finite
}
void reshape(int w, int h)
{
 glViewport(0,0, (GLsizei)w, (GLsizei)h);
 glMatrixMode(GL_PROJECTION);
 glLoadIdentity();//reset matrixes
 gluOrtho2D(-10,10,-10,10);//size of the world
 glMatrixMode(GL_MODELVIEW);
} 
